kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: httpd-sample
objects:
  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      name: httpd-unix-2.4-app
      namespace: gus84-dev
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: '${IMAGE_NAME_OUTPUT}:latest'
      source:
        git:
          ref: master
          uri: '${S2I_SCRIPTS_REPO}'
        type: Git
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: '${IMAGE_NAME_INPUT}:latest'
          env:
            - name: ENV_GIT_REPO_STATICS_FILE
              value: "${GIT_REPO_STATICS_FILE}"
            - name: ENV_GIT_REPO_CONFIGS_FILE
              value: "${GIT_REPO_CONFIGS_FILE}"     
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: "httpd-deployment"
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      strategy:
        type: Rolling
      triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - httpd-example
          from:
            kind: ImageStreamTag
            name: "${IMAGE_NAME_OUTPUT}:latest"
      - type: ConfigChange
      replicas: 1
      selector:
        name: "${IMAGE_NAME_OUTPUT}"
      template:
        metadata:
          name: "${IMAGE_NAME_OUTPUT}"
          labels:
            name: "${IMAGE_NAME_OUTPUT}"
        spec:
          containers:
          - name: httpd-example
            image: " "
            ports:
            - containerPort: 8080
            readinessProbe:
              timeoutSeconds: 3
              initialDelaySeconds: 3
              httpGet:
                path: "/"
                port: 8080
            livenessProbe:
              timeoutSeconds: 3
              initialDelaySeconds: 30
              httpGet:
                path: "/"
                port: 8080
            resources:
              limits:
                memory: "${MEMORY_LIMIT}"
            env: []

parameters:
  - name: GIT_REPO_STATICS_FILE
    description: "the init repo"
    value: "https://github.com/gustavo84/sample_front_app.git"
  - name: GIT_REPO_CONFIGS_FILE
    description: "the init repo"
    value: "This repo will get configurations files"
  - name: IMAGE_NAME_OUTPUT
    description: "the output image"
    value: "httpd-unix-2.4-app"
  - name: IMAGE_NAME_INPUT
    description: "the start image"
    value: "httpd-unix-2.4_wlp12.2.1.4.0_v1.0"
  - name: S2I_SCRIPTS_REPO
    description: "the S2I assemble file"
    value: "https://github.com/gustavo84/httpd-container"
  - name: MEMORY_LIMIT
    description: "the memory limit"
    value: "512Mi"     
